{% if content and not custom or type === 'brochure' %}
  <div id="mycontent" class="content min-h-screen flex flex-col lg:flex-row justify-start lg:justify-center px-8 py-10 z-10 relative gap-5 xl:gap-10 2xl:gap-16 {% if background %} bg-white bg-opacity-80 {% endif %}">
    <div {% if type !== 'brochure' %} x-data="{ toc: !!document.querySelector('.table-of-contents'), open: true }" x-show="toc" x-cloak {% else %} x-data="{ open: false }" x-bind:class="!open && 'min-w-full max-w-full lg:!min-w-[5rem] lg:!max-w-[5rem]'" {% endif %} class="transition-all lg:grow order-first mb-5 lg:mb-0 lg:order-last lg:min-w-[15rem] lg:max-w-[20rem] prose max-w-full">
      <div class="text-base lg:sticky lg:top-20">
        <div x-bind:class="!open ? 'text-normal lg:text-vertical' : editor() && aagFocused && '!border-secondary'" class="transition-all rounded-2xl p-5 backdrop-blur-sm border-2 {% if not background %} shadow-lg border-base-200 bg-white bg-opacity-90 {% else %} border-[rgba(255,255,255,0.6)] {% endif %}">
          <h1 {%if type === 'brochure' %} x-on:click="open = !open; aagFocused = open ? 'appGlance' : false" x-bind:class="!open && 'h-full lg:flex-row-reverse !mb-0'" {% endif %} class="{% if type === 'brochure' %} cursor-pointer {% endif %} my-0 mb-5 text-2xl flex gap-1 items-center justify-between font-semibold transition-all">
            <span x-data="{ title: {%if type === 'brochure' %}'At A Glance'{% else %}'Table of Contents'{% endif %}}" x-text="title" class="transition-all origin-center" x-bind:class="!open && 'lg:rotate-180'">&nbsp;</span>
            {% if type === 'brochure' %}
              <ion-icon x-show="open" name="caret-up-circle" class="origin-center lg:rotate-90" x-cloak>&nbsp;</ion-icon>
              <ion-icon x-show="!open" name="caret-down-circle" class="origin-center lg:-rotate-90" x-cloak>&nbsp;</ion-icon>
            {% endif %}
          </h1>
          <div id="appGlance" {% if type === 'brochure' %} x-data="editor('appGlance', '<p><strong>Estimated Cost</strong><br/><i>Coming Soon</i></p>')" x-show="open" {% endif %} class="table-of-contents-container max-h-[calc(80vh-132px)] overflow-y-auto overflow-x-hidden {% if type === 'brochure' %} pr-1 {% endif %}" x-cloak>
            {% if type === 'brochure' %}
              <p x-show="$store.program.term === undefined || $store.program.term" x-cloak>
                <strong>Term</strong>
                <br/>
                <span id="appTerm" x-text="$store.program.getTerm()">&nbsp;</span>
              </p>
              <p x-show="$store.program.schools === undefined || $store.program.schools" x-cloak>
                <strong>Schools</strong>
                <br/>
                <span id="appSchools" x-text="$store.program.getSchools()">&nbsp;</span>
              </p>
              <p x-show="$store.program.departments === undefined || $store.program.departments" x-cloak>
                <strong>Departments</strong>
                <br/>
                <span id="appDepartments" x-text="$store.program.getDepartments()">&nbsp;</span>
              </p>
              <p x-show="$store.program.countries === undefined || $store.program.countries" x-cloak>
                <strong>Countries</strong>
                <br/>
                <span id="appCountries" x-text="$store.program.getCountries()">&nbsp;</span>
              </p>
              <p x-show="$store.program.cities === undefined || $store.program.cities" x-cloak>
                <strong>Cities</strong>
                <br/>
                <span id="appCities" x-text="$store.program.getCities()">&nbsp;</span>
              </p>
              <hr x-show="$store.program.term === undefined || $store.program.term || $store.program.schools === undefined || $store.program.schools || $store.program.departments === undefined || $store.program.departments || $store.program.countries === undefined || $store.program.countries || $store.program.cities === undefined || $store.program.cities" x-cloak/>
              <p x-show="$store.program.courses === undefined || $store.program.courses" x-cloak>
                <strong>Courses</strong>
                <br/>
                <span id="appCourses" x-text="$store.program.getCourses()">&nbsp;</span>
              </p>
              <p x-show="$store.program.cser === undefined || $store.program.cser" x-cloak>
                <strong>CSER</strong>
                <br/>
                <span id="appCSER" x-text="$store.program.getCSER()">&nbsp;</span>
              </p>
              <p title="Academic Enrichment means you can attend this program without taking a course" x-show="$store.program.academicEnrichment === undefined || $store.program.academicEnrichment" x-cloak>
                <strong>Academic Enrichment</strong>
                <br/>
                <span id="appAcademicEnrichment" x-text="$store.program.getAcademicEnrichment()">&nbsp;</span>
              </p>
              <hr x-show="$store.program.academicEnrichment === undefined || $store.program.academicEnrichment || $store.program.courses === undefined || $store.program.courses || $store.program.cser === undefined || $store.program.cser"/>
            {% else %}
              &nbsp;
            {% endif %}
          </div>
          {% if type === 'brochure' %}

            <!--STRIP AAG-->

            <button x-show="open" x-on:click="addAAG()" class="flex items-center justify-center w-full gap-2 mt-5 btn btn-primary" x-cloak>
              <ion-icon name="add-circle">&nbsp;</ion-icon>
              <span>Add Item</span>
            </button>

            <!--STRIPEND AAG-->

          {% endif %}
        </div>
      </div>
    </div>
    <div id="appMainContent" class="prose flex-grow order-last lg:order-first py-5 px-2 rounded-2xl backdrop-blur-sm {% if not background %} bg-white bg-opacity-50 {% endif %} {% if full %} lg:max-w-full {% else %} lg:max-w-[65ch] {% endif %} max-w-full {% if type === 'brochure' %} lg:!max-w-[85ch] {% endif %}">
      {% if type === 'brochure' %}

        <!--STRIP MENU-->

        <div id="appMenu" x-data="menu()" x-bind:class="aagFocused && '!border-secondary border-opacity-60'" class="menu w-full py-1 px-3 rounded-t-lg border-[3px] border-primary flex flex-wrap gap-[1px] font-medium">

          <span tabindex="0" data-tippy-content="Ctrl + B">
            <button id="tt-bold" x-bind:class="isActive('bold', lastUpdate) && 'is-active'" x-on:click="toggleBold()" class="flex items-center justify-center p-1 transition-colors rounded-md w-7 h-7 hover:bg-primary hover:text-white">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="none" d="M0 0h24v24H0z"/><path d="M8 11h4.5a2.5 2.5 0 1 0 0-5H8v5zm10 4.5a4.5 4.5 0 0 1-4.5 4.5H6V4h6.5a4.5 4.5 0 0 1 3.256 7.606A4.498 4.498 0 0 1 18 15.5zM8 13v5h5.5a2.5 2.5 0 1 0 0-5H8z" fill="currentColor"/></svg>
            </button>
          </span>
          <span tabindex="0" data-tippy-content="Ctrl + I">
            <button id="tt-italic" x-bind:class="isActive('italic', lastUpdate) && 'is-active'" x-on:click="toggleItalic()" class="flex items-center justify-center p-1 transition-colors rounded-md w-7 h-7 hover:bg-primary hover:text-white">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="none" d="M0 0h24v24H0z"/><path d="M15 20H7v-2h2.927l2.116-12H9V4h8v2h-2.927l-2.116 12H15z" fill="currentColor"/></svg>
            </button>
          </span>
          <span tabindex="0" data-tippy-content="Ctrl + U">
            <button id="tt-underline" x-bind:class="isActive('underline', lastUpdate) && 'is-active'" x-on:click="toggleUnderline()" class="flex items-center justify-center p-1 transition-colors rounded-md w-7 h-7 hover:bg-primary hover:text-white">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="none" d="M0 0h24v24H0z"/><path d="M8 3v9a4 4 0 1 0 8 0V3h2v9a6 6 0 1 1-12 0V3h2zM4 20h16v2H4v-2z" fill="currentColor"/></svg>
            </button>
          </span>
          <span tabindex="0" data-tippy-content="Ctrl + Shift + X">
            <button id="tt-strikethrough" x-bind:class="isActive('strike', lastUpdate) && 'is-active'" x-on:click="toggleStrike()" class="flex items-center justify-center p-1 transition-colors rounded-md w-7 h-7 hover:bg-primary hover:text-white">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="none" d="M0 0h24v24H0z"/><path d="M17.154 14c.23.516.346 1.09.346 1.72 0 1.342-.524 2.392-1.571 3.147C14.88 19.622 13.433 20 11.586 20c-1.64 0-3.263-.381-4.87-1.144V16.6c1.52.877 3.075 1.316 4.666 1.316 2.551 0 3.83-.732 3.839-2.197a2.21 2.21 0 0 0-.648-1.603l-.12-.117H3v-2h18v2h-3.846zm-4.078-3H7.629a4.086 4.086 0 0 1-.481-.522C6.716 9.92 6.5 9.246 6.5 8.452c0-1.236.466-2.287 1.397-3.153C8.83 4.433 10.271 4 12.222 4c1.471 0 2.879.328 4.222.984v2.152c-1.2-.687-2.515-1.03-3.946-1.03-2.48 0-3.719.782-3.719 2.346 0 .42.218.786.654 1.099.436.313.974.562 1.613.75.62.18 1.297.414 2.03.699z" fill="currentColor"/></svg>
            </button>
          </span>
          <span tabindex="0" data-tippy-content="Ctrl + E">
            <button id="tt-code" x-bind:class="isActive('code', lastUpdate) && 'is-active'" x-on:click="toggleCode()" class="flex items-center justify-center p-1 transition-colors rounded-md w-7 h-7 hover:bg-primary hover:text-white">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="none" d="M0 0h24v24H0z"/><path d="M23 12l-7.071 7.071-1.414-1.414L20.172 12l-5.657-5.657 1.414-1.414L23 12zM3.828 12l5.657 5.657-1.414 1.414L1 12l7.071-7.071 1.414 1.414L3.828 12z" fill="currentColor"/></svg>
            </button>
          </span>

          <div class="h-5 my-1 w-[2px] rounded-md mx-2 bg-primary-content-fade">&nbsp;</div>

          <span tabindex="0" data-tippy-content="Ctrl + .">
            <button id="tt-superscript" x-bind:class="isActive('superscript', lastUpdate) && 'is-active'" x-on:click="toggleSuperscript()" class="flex items-center justify-center p-1 transition-colors rounded-md w-7 h-7 hover:bg-primary hover:text-white">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="none" d="M0 0h24v24H0z"/><path d="M5.596 5l4.904 5.928L15.404 5H18l-6.202 7.497L18 19.994V20h-2.59l-4.91-5.934L5.59 20H3v-.006l6.202-7.497L3 5h2.596zM21.55 6.58a.8.8 0 1 0-1.32-.36l-1.155.33A2.001 2.001 0 0 1 21 4a2 2 0 0 1 1.373 3.454L20.744 9H23v1h-4V9l2.55-2.42z" fill="currentColor"/></svg>
            </button>
          </span>
          <span tabindex="0" data-tippy-content="Ctrl + Shifit + ,">
            <button id="tt-subscript" x-bind:class="isActive('subscript', lastUpdate) && 'is-active'" x-on:click="toggleSubscript()" class="flex items-center justify-center p-1 transition-colors rounded-md w-7 h-7 hover:bg-primary hover:text-white">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="none" d="M0 0h24v24H0z"/><path d="M5.596 4L10.5 9.928 15.404 4H18l-6.202 7.497L18 18.994V19h-2.59l-4.91-5.934L5.59 19H3v-.006l6.202-7.497L3 4h2.596zM21.55 16.58a.8.8 0 1 0-1.32-.36l-1.155.33A2.001 2.001 0 0 1 21 14a2 2 0 0 1 1.373 3.454L20.744 19H23v1h-4v-1l2.55-2.42z" fill="currentColor"/></svg>
            </button>
          </span>
          <span tabindex="0" x-bind:class="isActive('highlight', lastUpdate) && 'is-active'" data-tippy-content="Change Background Color" class="flex gap-0 justify-center items-center group hover:bg-primary hover:text-white rounded-md overflow-hidden">
            <button id="tt-background-color-toggle" x-on:click="toggleBackground()" x-bind:style="'color: ' + getBackground(lastUpdate)" class="flex items-center justify-center py-1 transition-colors w-7 h-7 hover:bg-neutral">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="none" d="M0 0h24v24H0z"/><path d="M15.95 2.393l5.657 5.657a1 1 0 0 1 0 1.414l-7.779 7.779-2.12.707-1.415 1.414a1 1 0 0 1-1.414 0l-4.243-4.243a1 1 0 0 1 0-1.414l1.414-1.414.707-2.121 7.779-7.779a1 1 0 0 1 1.414 0zm.707 3.536l-6.364 6.364 1.414 1.414 6.364-6.364-1.414-1.414zM4.282 16.889l2.829 2.829-1.414 1.414-4.243-1.414 2.828-2.829z" fill="currentColor"/></svg>
            </button>
            <button id="tt-background-color-set" class="flex items-center justify-center py-1 pr-1 pl-[3px] transition-colors h-7 hover:bg-neutral">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="7 0 9 24" height="24"><path fill="none" d="M0 0h24v24H0z"/><path d="M12 15l-4.243-4.243 1.415-1.414L12 12.172l2.828-2.829 1.415 1.414z" fill="currentColor"/></svg>
            </button>
            <div id="template-tt-background-color" class="p-2" style="display: none;"></div>
          </span>
          <span tabindex="0" x-bind:class="isActive('textStyle', lastUpdate) && 'is-active'" data-tippy-content="Change Text Color" class="flex gap-0 justify-center items-center group hover:bg-primary hover:text-white rounded-md overflow-hidden">
            <button id="tt-text-color-toggle" x-on:click="toggleColor()" x-bind:style="'color: ' + getColor(lastUpdate)" class="flex items-center justify-center py-1 transition-colors w-7 h-7 hover:bg-neutral">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="none" d="M0 0h24v24H0z"/><path d="M15.246 14H8.754l-1.6 4H5l6-15h2l6 15h-2.154l-1.6-4zm-.8-2L12 5.885 9.554 12h4.892zM3 20h18v2H3v-2z" fill="currentColor"/></svg>
            </button>
            <button id="tt-text-color-set" class="flex items-center justify-center py-1 pr-1 pl-[3px] transition-colors h-7 hover:bg-neutral">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="7 0 9 24" height="24"><path fill="none" d="M0 0h24v24H0z"/><path d="M12 15l-4.243-4.243 1.415-1.414L12 12.172l2.828-2.829 1.415 1.414z" fill="currentColor"/></svg>
            </button>
            <div id="template-tt-text-color" class="p-2" style="display: none;"></div>
          </span>

          <div class="h-5 my-1 w-[2px] rounded-md mx-2 bg-primary-content-fade">&nbsp;</div>

          <span tabindex="0" data-tippy-content="Ctrl + Alt + L">
            <button id="tt-left" x-bind:class="isActive({ textAlign: 'left' }, lastUpdate) && 'is-active'" x-on:click="setTextAlign('left')" class="flex items-center justify-center p-1 transition-colors rounded-md w-7 h-7 hover:bg-primary hover:text-white">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="none" d="M0 0h24v24H0z"/><path d="M3 4h18v2H3V4zm0 15h14v2H3v-2zm0-5h18v2H3v-2zm0-5h14v2H3V9z" fill="currentColor"/></svg>
            </button>
          </span>
          <span tabindex="0" data-tippy-content="Ctrl + Alt + E">
            <button id="tt-center" x-bind:class="isActive({ textAlign: 'center' }, lastUpdate) && 'is-active'" x-on:click="setTextAlign('center')" class="flex items-center justify-center p-1 transition-colors rounded-md w-7 h-7 hover:bg-primary hover:text-white">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="none" d="M0 0h24v24H0z"/><path d="M3 4h18v2H3V4zm2 15h14v2H5v-2zm-2-5h18v2H3v-2zm2-5h14v2H5V9z" fill="currentColor"/></svg>
            </button>
          </span>
          <span tabindex="0" data-tippy-content="Ctrl + Alt + R">
            <button id="tt-right" x-bind:class="isActive({ textAlign: 'right' }, lastUpdate) && 'is-active'" x-on:click="setTextAlign('right')" class="flex items-center justify-center p-1 transition-colors rounded-md w-7 h-7 hover:bg-primary hover:text-white">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="none" d="M0 0h24v24H0z"/><path d="M3 4h18v2H3V4zm4 15h14v2H7v-2zm-4-5h18v2H3v-2zm4-5h14v2H7V9z" fill="currentColor"/></svg>
            </button>
          </span>
          <span tabindex="0" data-tippy-content="Ctrl + Alt + J">
            <button id="tt-justify" x-bind:class="isActive({ textAlign: 'justify' }, lastUpdate) && 'is-active'" x-on:click="setTextAlign('justify')" class="flex items-center justify-center p-1 transition-colors rounded-md w-7 h-7 hover:bg-primary hover:text-white">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="none" d="M0 0h24v24H0z"/><path d="M3 4h18v2H3V4zm0 15h18v2H3v-2zm0-5h18v2H3v-2zm0-5h18v2H3V9z" fill="currentcolor"/></svg>
            </button>
          </span>

          <div class="h-5 my-1 w-[2px] rounded-md mx-2 bg-primary-content-fade">&nbsp;</div>

          <span tabindex="0" data-tippy-content="Ctrl + Alt + 1">
            <button id="tt-heading-1" x-bind:class="isActive('heading', lastUpdate, { level: 1 }) && 'is-active'" x-on:click="setHeading(1)" class="flex items-center justify-center p-1 transition-colors rounded-md w-7 h-7 hover:bg-primary hover:text-white">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="none" d="M0 0H24V24H0z"/><path d="M13 20h-2v-7H4v7H2V4h2v7h7V4h2v16zm8-12v12h-2v-9.796l-2 .536V8.67L19.5 8H21z" fill="currentColor"/></svg>
            </button>
          </span>
          <span tabindex="0" data-tippy-content="Ctrl + Alt + 2">
            <button id="tt-heading-2" x-bind:class="isActive('heading', lastUpdate, { level: 2 }) && 'is-active'" x-on:click="setHeading(2)" class="flex items-center justify-center p-1 transition-colors rounded-md w-7 h-7 hover:bg-primary hover:text-white">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="none" d="M0 0H24V24H0z"/><path d="M4 4v7h7V4h2v16h-2v-7H4v7H2V4h2zm14.5 4c2.071 0 3.75 1.679 3.75 3.75 0 .857-.288 1.648-.772 2.28l-.148.18L18.034 18H22v2h-7v-1.556l4.82-5.546c.268-.307.43-.709.43-1.148 0-.966-.784-1.75-1.75-1.75-.918 0-1.671.707-1.744 1.606l-.006.144h-2C14.75 9.679 16.429 8 18.5 8z" fill="currentColor"/></svg>
            </button>
          </span>
          <span tabindex="0" data-tippy-content="Ctrl + Alt + 3">
            <button id="tt-heading-3" x-bind:class="isActive('heading', lastUpdate, { level: 3 }) && 'is-active'" x-on:click="setHeading(3)" class="flex items-center justify-center p-1 transition-colors rounded-md w-7 h-7 hover:bg-primary hover:text-white">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="none" d="M0 0H24V24H0z"/><path d="M22 8l-.002 2-2.505 2.883c1.59.435 2.757 1.89 2.757 3.617 0 2.071-1.679 3.75-3.75 3.75-1.826 0-3.347-1.305-3.682-3.033l1.964-.382c.156.806.866 1.415 1.718 1.415.966 0 1.75-.784 1.75-1.75s-.784-1.75-1.75-1.75c-.286 0-.556.069-.794.19l-1.307-1.547L19.35 10H15V8h7zM4 4v7h7V4h2v16h-2v-7H4v7H2V4h2z" fill="currentColor"/></svg>
            </button>
          </span>
          <span tabindex="0" data-tippy-content="Ctrl + Alt + 0">
            <button id="tt-paragraph" x-bind:class="isActive('paragraph', lastUpdate) && 'is-active'" x-on:click="setParagraph()" class="flex items-center justify-center p-1 transition-colors rounded-md w-7 h-7 hover:bg-primary hover:text-white">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="none" d="M0 0h24v24H0z"/><path d="M12 6v15h-2v-5a6 6 0 1 1 0-12h10v2h-3v15h-2V6h-3zm-2 0a4 4 0 1 0 0 8V6z" fill="currentColor"/></svg>
            </button>
          </span>

          <div class="h-5 my-1 w-[2px] rounded-md mx-2 bg-primary-content-fade">&nbsp;</div>

          <span tabindex="0" data-tippy-content="Ctrl + Shift + 7">
            <button id="tt-numberlist" x-bind:class="isActive('orderedList', lastUpdate) && 'is-active'" x-on:click="toggleOrderedList()" class="flex items-center justify-center p-1 transition-colors rounded-md w-7 h-7 hover:bg-primary hover:text-white">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="none" d="M0 0h24v24H0z"/><path d="M8 4h13v2H8V4zM5 3v3h1v1H3V6h1V4H3V3h2zM3 14v-2.5h2V11H3v-1h3v2.5H4v.5h2v1H3zm2 5.5H3v-1h2V18H3v-1h3v4H3v-1h2v-.5zM8 11h13v2H8v-2zm0 7h13v2H8v-2z" fill="currentColor"/></svg>
            </button>
          </span>
          <span tabindex="0" data-tippy-content="Ctrl + Shift + 8">
            <button id="tt-bulletlist" x-bind:class="isActive('bulletList', lastUpdate) && 'is-active'" x-on:click="toggleBulletList()" class="flex items-center justify-center p-1 transition-colors rounded-md w-7 h-7 hover:bg-primary hover:text-white">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="none" d="M0 0h24v24H0z"/><path d="M8 4h13v2H8V4zM4.5 6.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm0 7a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm0 6.9a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zM8 11h13v2H8v-2zm0 7h13v2H8v-2z" fill="currentColor"/></svg>
            </button>
          </span>
          <span tabindex="0" data-tippy-content="Ctrl + Shift + 9">
            <button id="tt-checklist" x-bind:class="isActive('taskList', lastUpdate) && 'is-active'" x-on:click="toggleTaskList()" class="flex items-center justify-center p-1 transition-colors rounded-md w-7 h-7 hover:bg-primary hover:text-white">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="none" d="M0 0h24v24H0z"/><path d="M11 4h10v2H11V4zm0 4h6v2h-6V8zm0 6h10v2H11v-2zm0 4h6v2h-6v-2zM3 4h6v6H3V4zm2 2v2h2V6H5zm-2 8h6v6H3v-6zm2 2v2h2v-2H5z" fill="currentColor"/></svg>
            </button>
          </span>

          <div class="h-5 my-1 w-[2px] rounded-md mx-2 bg-primary-content-fade">&nbsp;</div>

          <span tabindex="0" x-data="{ link: getLink(lastUpdate), target: getTarget(lastUpdate) === '_self' ? false : true, classes: getLinkClasses(lastUpdate) }" x-on:click="link = getLink(lastUpdate); target = getTarget(lastUpdate) === '_self' ? false : true; classes = getLinkClasses(lastUpdate)" data-tippy-content="URL Link">
            <button id="tt-link" x-bind:disabled="!isSelected(lastUpdate) && !isActive('link', lastUpdate)" x-bind:class="isActive('link', lastUpdate) && 'is-active'" class="flex items-center justify-center p-1 transition-colors rounded-md w-7 h-7 hover:bg-primary hover:text-white">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="none" d="M0 0h24v24H0z"/><path d="M18.364 15.536L16.95 14.12l1.414-1.414a5 5 0 1 0-7.071-7.071L9.879 7.05 8.464 5.636 9.88 4.222a7 7 0 0 1 9.9 9.9l-1.415 1.414zm-2.828 2.828l-1.415 1.414a7 7 0 0 1-9.9-9.9l1.415-1.414L7.05 9.88l-1.414 1.414a5 5 0 1 0 7.071 7.071l1.414-1.414 1.415 1.414zm-.708-10.607l1.415 1.415-7.071 7.07-1.415-1.414 7.071-7.07z" fill="currentColor"/></svg>
            </button>
            <div id="template-tt-link" class="p-2 prose w-72" style="display: none;">
              <div class="w-full flex flex-col gap-4">
                <div class="inline-flex items-center gap-1 w-full text-white">
                  <input id="brochureTTLink" x-on:change="toggleLink(link, target, classes)" type="checkbox" x-model="target"/>
                  <label for="brochureTTLink" class="m-0 leading-tight">Open Link in a New Tab</label>
                </div>
                <input type="text" x-on:input="toggleLink(link, target, classes)" placeholder="Set Your Link" x-model="link" class="p-1 rounded-md text-sm w-full" x-cloak/>
                <select x-model="classes" x-on:change="toggleLink(link, target, classes)" class="rounded-md block w-full p-1 text-sm bg-opacity-80 border-1 border-primary-content-fade">
                  <option value="">Normal Link</option>
                  <option value="btn btn-primary">Primary</option>
                  <option value="btn btn-secondary">Secondary</option>
                  <option value="btn btn-accent">Accent</option>
                  <option value="btn btn-primary btn-full w-full">Primary Full</option>
                  <option value="btn btn-secondary btn-full w-full">Secondary Full</option>
                  <option value="btn btn-accent btn-full w-full">Accent Full</option>
                </select>
                <button class="full text-sm btn btn-secondary" x-show="isActive('link', lastUpdate)" x-on:click="toggleLink(false, false, false, true)">Clear Link</button>
              </div>
            </div>
          </span>
          <span tabindex="0" x-data="{ embed: getIframe(lastUpdate) }" x-on:click="embed = getIframe(lastUpdate)" data-tippy-content="Video Embed">
            <button id="tt-embed" x-bind:class="isActive('iframe', lastUpdate) && 'is-active'" class="flex items-center justify-center p-1 transition-colors rounded-md w-7 h-7 hover:bg-primary hover:text-white">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="none" d="M0 0h24v24H0z"/><path d="M2 3.993A1 1 0 0 1 2.992 3h18.016c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H2.992A.993.993 0 0 1 2 20.007V3.993zM8 5v14h8V5H8zM4 5v2h2V5H4zm14 0v2h2V5h-2zM4 9v2h2V9H4zm14 0v2h2V9h-2zM4 13v2h2v-2H4zm14 0v2h2v-2h-2zM4 17v2h2v-2H4zm14 0v2h2v-2h-2z" fill="currentColor"/></svg>
            </button>
            <div id="template-tt-embed" class="p-2 prose w-72" style="display: none;">
              <div class="w-full flex flex-col gap-4">
                <input type="text" x-on:change="setIframe(embed)" placeholder="Set Your Video Embed Link" x-model="embed" class="p-1 rounded-md text-sm w-full" x-cloak/>
              </div>
            </div>
          </span>
          <span tabindex="0" x-data="{ pdf: getPDF(lastUpdate) }" x-on:click="pdf = getPDF(lastUpdate)" data-tippy-content="PDF Embed">
            <button id="tt-pdf" x-bind:class="isActive('pdf', lastUpdate) && 'is-active'" class="flex items-center justify-center p-1 transition-colors rounded-md w-7 h-7 hover:bg-primary hover:text-white">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="none" d="M0 0h24v24H0z"/><path d="M9 2.003V2h10.998C20.55 2 21 2.455 21 2.992v18.016a.993.993 0 0 1-.993.992H3.993A1 1 0 0 1 3 20.993V8l6-5.997zM5.83 8H9V4.83L5.83 8zM11 4v5a1 1 0 0 1-1 1H5v10h14V4h-8z" fill="currentColor"/></svg>
            </button>
            <div id="template-tt-pdf" class="p-2 prose w-72" style="display: none;">
              <div class="w-full flex flex-col gap-4">
                <input type="text" x-on:change="setPDF(pdf)" placeholder="Set Your PDF Embed Link" x-model="pdf" class="p-1 rounded-md text-sm w-full" x-cloak/>
              </div>
            </div>
          </span>
          <span tabindex="0" x-data="{ image: getImage(lastUpdate), classes: getImageClasses(lastUpdate) }" x-on:click="image = getImage(lastUpdate); classes = getImageClasses(lastUpdate)" data-tippy-content="Image">
            <button id="tt-image" x-bind:class="isActive('image', lastUpdate) && 'is-active'" class="flex items-center justify-center p-1 transition-colors rounded-md w-7 h-7 hover:bg-primary hover:text-white">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="none" d="M0 0h24v24H0z"/><path d="M4.828 21l-.02.02-.021-.02H2.992A.993.993 0 0 1 2 20.007V3.993A1 1 0 0 1 2.992 3h18.016c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H4.828zM20 15V5H4v14L14 9l6 6zm0 2.828l-6-6L6.828 19H20v-1.172zM8 11a2 2 0 1 1 0-4 2 2 0 0 1 0 4z" fill="currentColor"/></svg>
            </button>
            <div id="template-tt-image" class="p-2 prose w-72" style="display: none;">
              <div class="w-full flex flex-col gap-4">
                <input type="text" x-on:change="setImage(image, classes)" placeholder="Set Your Image Link" x-model="image" class="p-1 rounded-md text-sm w-full" x-cloak/>
                <select x-model="classes" x-on:change="setImage(image, classes)" class="rounded-md block w-full p-1 text-sm bg-opacity-80 border-1 border-primary-content-fade">
                  <option value="header full">Full Image</option>
                  <option value="header">Header Image</option>
                </select>
              </div>
            </div>
          </span>

          <div class="h-5 my-1 w-[2px] rounded-md mx-2 bg-primary-content-fade">&nbsp;</div>

          <span tabindex="0" data-tippy-content="Insert Table">
            <button id="tt-table" x-on:click="toggleTable()" x-bind:class="isActive('table', lastUpdate) && 'is-active'" class="flex items-center justify-center p-1 transition-colors rounded-md w-7 h-7 hover:bg-primary hover:text-white">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="none" d="M0 0h24v24H0z"/><path d="M14 10h-4v4h4v-4zm2 0v4h3v-4h-3zm-2 9v-3h-4v3h4zm2 0h3v-3h-3v3zM14 5h-4v3h4V5zm2 0v3h3V5h-3zm-8 5H5v4h3v-4zm0 9v-3H5v3h3zM8 5H5v3h3V5zM4 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1z" fill="currentColor"/></svg>
            </button>
          </span>
          <span tabindex="0" data-tippy-content="Add Row After">
            <button id="tt-insert-row" x-on:click="addRowAfter()" class="flex items-center justify-center p-1 transition-colors rounded-md w-7 h-7 hover:bg-primary hover:text-white">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="none" d="M0 0H24V24H0z"/><path d="M12 13c2.761 0 5 2.239 5 5s-2.239 5-5 5-5-2.239-5-5 2.239-5 5-5zm1 2h-2v1.999L9 17v2l2-.001V21h2v-2.001L15 19v-2l-2-.001V15zm7-12c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1H4c-.552 0-1-.448-1-1V4c0-.552.448-1 1-1h16zM5 5v4h14V5H5z" fill="currentColor"/></svg>
            </button>
          </span>
          <span tabindex="0" data-tippy-content="Add Column After">
            <button id="tt-insert-column" x-on:click="addColumnAfter()" class="flex items-center justify-center p-1 transition-colors rounded-md w-7 h-7 hover:bg-primary hover:text-white">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="none" d="M0 0H24V24H0z"/><path d="M10 3c.552 0 1 .448 1 1v16c0 .552-.448 1-1 1H4c-.552 0-1-.448-1-1V4c0-.552.448-1 1-1h6zM9 5H5v14h4V5zm9 2c2.761 0 5 2.239 5 5s-2.239 5-5 5-5-2.239-5-5 2.239-5 5-5zm1 2h-2v1.999L15 11v2l2-.001V15h2v-2.001L21 13v-2l-2-.001V9z" fill="currentColor"/></svg>
            </button>
          </span>
          <span tabindex="0" data-tippy-content="Delete Row">
            <button id="tt-delete-row" x-on:click="deleteRow()" class="flex items-center justify-center p-1 transition-colors rounded-md w-7 h-7 hover:bg-primary hover:text-white">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="none" d="M0 0H24V24H0z"/><path d="M20 5c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1 .628.835 1 1.874 1 3 0 2.761-2.239 5-5 5s-5-2.239-5-5c0-1.126.372-2.165 1-3H4c-.552 0-1-.448-1-1V6c0-.552.448-1 1-1h16zm-7 10v2h6v-2h-6zm6-8H5v4h14V7z" fill="currentColor"/></svg>
            </button>
          </span>
          <span tabindex="0" data-tippy-content="Delete Column">
            <button id="tt-delete-column" x-on:click="deleteColumn()" class="flex items-center justify-center p-1 transition-colors rounded-md w-7 h-7 hover:bg-primary hover:text-white">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="none" d="M0 0H24V24H0z"/><path d="M12 3c.552 0 1 .448 1 1v8c.835-.628 1.874-1 3-1 2.761 0 5 2.239 5 5s-2.239 5-5 5c-1.032 0-1.99-.313-2.787-.848L13 20c0 .552-.448 1-1 1H6c-.552 0-1-.448-1-1V4c0-.552.448-1 1-1h6zm-1 2H7v14h4V5zm8 10h-6v2h6v-2z" fill="currentColor"/></svg>
            </button>
          </span>

          <div class="h-5 my-1 w-[2px] rounded-md mx-2 bg-primary-content-fade">&nbsp;</div>

          <span tabindex="0" data-tippy-content="Ctrl + Shift + B">
            <button id="tt-blockquote" x-bind:class="isActive('blockquote', lastUpdate) && 'is-active'" x-on:click="toggleBlockquote()" class="flex items-center justify-center p-1 transition-colors rounded-md w-7 h-7 hover:bg-primary hover:text-white">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="none" d="M0 0h24v24H0z"/><path d="M4.583 17.321C3.553 16.227 3 15 3 13.011c0-3.5 2.457-6.637 6.03-8.188l.893 1.378c-3.335 1.804-3.987 4.145-4.247 5.621.537-.278 1.24-.375 1.929-.311 1.804.167 3.226 1.648 3.226 3.489a3.5 3.5 0 0 1-3.5 3.5c-1.073 0-2.099-.49-2.748-1.179zm10 0C13.553 16.227 13 15 13 13.011c0-3.5 2.457-6.637 6.03-8.188l.893 1.378c-3.335 1.804-3.987 4.145-4.247 5.621.537-.278 1.24-.375 1.929-.311 1.804.167 3.226 1.648 3.226 3.489a3.5 3.5 0 0 1-3.5 3.5c-1.073 0-2.099-.49-2.748-1.179z" fill="currentColor"/></svg>
            </button>
          </span>
          <span tabindex="0" data-tippy-content="Ctrl + Alt + C">
            <button id="tt-codeblock" x-bind:class="isActive('codeBlock', lastUpdate) && 'is-active'" x-on:click="toggleCodeBlock()" class="flex items-center justify-center p-1 transition-colors rounded-md w-7 h-7 hover:bg-primary hover:text-white">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="none" d="M0 0h24v24H0z"/><path d="M3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1zm1 2v14h16V5H4zm16 7l-3.536 3.536-1.414-1.415L17.172 12 15.05 9.879l1.414-1.415L20 12zM6.828 12l2.122 2.121-1.414 1.415L4 12l3.536-3.536L8.95 9.88 6.828 12zm4.416 5H9.116l3.64-10h2.128l-3.64 10z" fill="currentColor"/></svg>
            </button>
          </span>
          <span tabindex="0" data-tippy-content="Horizontal Divider">
            <button  id="tt-divider" x-on:click="setHorizontalRule()" class="flex items-center justify-center p-1 transition-colors rounded-md w-7 h-7 hover:bg-primary hover:text-white">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="none" d="M0 0h24v24H0z"/><path d="M2 11h2v2H2v-2zm4 0h12v2H6v-2zm14 0h2v2h-2v-2z" fill="currentColor"/></svg>
            </button>
          </span>
          <span tabindex="0" data-tippy-content="Shift + Enter">
            <button id="tt-hardbreak" x-on:click="setHardBreak()" class="flex items-center justify-center p-1 transition-colors rounded-md w-7 h-7 hover:bg-primary hover:text-white">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="none" d="M0 0h24v24H0z"/><path d="M15 18h1.5a2.5 2.5 0 1 0 0-5H3v-2h13.5a4.5 4.5 0 1 1 0 9H15v2l-4-3 4-3v2zM3 4h18v2H3V4zm6 14v2H3v-2h6z" fill="currentColor"/></svg>
            </button>
          </span>

          <div class="h-5 my-1 w-[2px] rounded-md mx-2 bg-primary-content-fade">&nbsp;</div>

          <span tabindex="0" data-tippy-content="Clear Formatting">
            <button id="tt-clear-format"   x-on:click="clearFormat()" class="flex items-center justify-center p-1 transition-colors rounded-md w-7 h-7 hover:bg-primary hover:text-white">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="none" d="M0 0h24v24H0z"/><path d="M12.651 14.065L11.605 20H9.574l1.35-7.661-7.41-7.41L4.93 3.515 20.485 19.07l-1.414 1.414-6.42-6.42zm-.878-6.535l.27-1.53h-1.8l-2-2H20v2h-5.927L13.5 9.257 11.773 7.53z" fill="currentColor"/></svg>
            </button>
          </span>
          <span tabindex="0" data-tippy-content="Ctrl + Z">
            <button id="tt-undo" x-on:click="undo()" x-bind:disabled="!canUndo(lastUpdate)"  class="flex items-center justify-center p-1 transition-colors rounded-md w-7 h-7 hover:bg-primary hover:text-white">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="none" d="M0 0h24v24H0z"/><path d="M5.828 7l2.536 2.536L6.95 10.95 2 6l4.95-4.95 1.414 1.414L5.828 5H13a8 8 0 1 1 0 16H4v-2h9a6 6 0 1 0 0-12H5.828z" fill="currentColor"/></svg>
            </button>
          </span>
          <span tabindex="0" data-tippy-content="Ctrl + Shift + Z">
            <button id="tt-redo" x-on:click="redo()" x-bind:disabled="!canRedo(lastUpdate)"  class="flex items-center justify-center p-1 transition-colors rounded-md w-7 h-7 hover:bg-primary hover:text-white">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="none" d="M0 0h24v24H0z"/><path d="M18.172 7H11a6 6 0 1 0 0 12h9v2h-9a8 8 0 1 1 0-16h7.172l-2.536-2.536L17.05 1.05 22 6l-4.95 4.95-1.414-1.414L18.172 7z" fill="currentColor"/></svg>
            </button>
          </span>
        </div>

        <!--STRIPEND MENU-->

      {% endif %}

      {% if env === 'stage' %}
        <h1>Stage Test</h1>
      {% endif %}

      {{ content | safe }}

      {% if type === 'brochure' %}

        <!--STRIP IMPORTEXPORT-->

        <div x-data="{ url: window.location.host, programID: new URLSearchParams(window.location.search).get('programID') || false, clipboard: '' }", class="flex flex-col w-full gap-2 mt-2 navMD:flex-row">
          <button id="exportBrochureButton" x-on:click="exportBrochure(programID)" x-show="url !== 'liberty-sa.terrradotta.com'" class="flex items-center justify-center flex-1 gap-2 px-4 py-2 rounded-xl bg-primary hover:bg-primary-focus text-primary-content">
            <ion-icon name="copy" class="text-2xl text-white">&nbsp;</ion-icon>
            <span>Export Brochure</span>
          </button>
          <button id="changeBrochureSettings" class="flex items-center justify-center flex-1 gap-2 px-4 py-2 rounded-xl bg-secondary hover:bg-secondary-focus text-secondary-content">
            <ion-icon name="settings" class="text-2xl text-white">&nbsp;</ion-icon>
            <span>Change Settings</span>
          </button>
          <div id="changeBrochureSettings-template" style="display: none;">
            <div class="w-72 p-2 flex flex-col gap-2 prose text-white max-h-44 overflow-y-auto">
              <p class="leading-tight">
                <i class="text-sm">Note: these settings do not effect the underlying program. They only override what is shown on the brochure. When at all possible, stick with the defaults instead of using these overrides.</i>
              </p>
              <div x-data="{ useCustomBackground: false }" x-init="useCustomBackground = $store.background.endsWith('21698') ? false : true" class="flex flex-col justify-center items-start gap-1 w-full">
                <div x-on:change="$store.background = useCustomBackground ? $store.background.endsWith('21698') ? '' : $store.background : 'https://liberty-sa.terradotta.com/_customtags/ct_Image.cfm?Image_ID=21698'" class="inline-flex items-center gap-1 w-full">
                  <input id="brochureBackground" type="checkbox" x-model="useCustomBackground"/>
                  <label for="brochureBackground" class="m-0 leading-tight">Use Custom Background</label>
                </div>
                <input type="text" x-show="useCustomBackground" x-model="$store.background" class="rounded-sm p-1 text-primary w-full" placeholder="Custom Background URL" x-cloak/>
              </div>
              <div x-data="{ isCustom: false }" x-init="isCustom = $store.program.title === undefined ? false : true" class="flex flex-col justify-center items-start gap-1 w-full">
                <div x-on:change="$store.program.title = isCustom ? $store.program.getTitle() : undefined" class="inline-flex items-center gap-1 w-full">
                  <input id="brochureTitle" type="checkbox" x-model="isCustom"/>
                  <label for="brochureTitle" class="m-0 leading-tight">Use Custom Title</label>
                </div>
                <input type="text" x-show="isCustom" x-model="$store.program.title" class="rounded-sm p-1 text-primary w-full" placeholder="Custom Program Title" x-cloak/>
              </div>
              <div x-data="{ isCustom: false }" x-init="isCustom = $store.program.startDate === undefined ? false : true" class="flex flex-col justify-center items-start gap-1 w-full">
                <div x-on:change="$store.program.startDate = isCustom ? $store.program.getStartDate() : undefined" class="inline-flex items-center gap-1 w-full">
                  <input id="brochureStartDate" type="checkbox" x-model="isCustom"/>
                  <label for="brochureStartDate" class="m-0 leading-tight">Use Custom Start Date</label>
                </div>
                <input type="text" x-show="isCustom" x-model="$store.program.startDate" class="rounded-sm p-1 text-primary w-full" placeholder="Custom Start Date" x-cloak/>
              </div>
              <div x-data="{ isCustom: false }" x-init="isCustom = $store.program.endDate === undefined ? false : true" class="flex flex-col justify-center items-start gap-1 w-full">
                <div x-on:change="$store.program.endDate = isCustom ? $store.program.getEndDate() : undefined" class="inline-flex items-center gap-1 w-full">
                  <input id="brochureEndDate" type="checkbox" x-model="isCustom"/>
                  <label for="brochureEndDate" class="m-0 leading-tight">Use Custom End Date</label>
                </div>
                <input type="text" x-show="isCustom" x-model="$store.program.endDate" class="rounded-sm p-1 text-primary w-full" placeholder="Custom End Date" x-cloak/>
              </div>
              <div x-data="{ isCustom: false }" x-init="isCustom = $store.program.appDeadline === undefined ? false : true" class="flex flex-col justify-center items-start gap-1 w-full">
                <div x-on:change="$store.program.appDeadline = isCustom ? $store.program.getAppDeadline() : undefined" class="inline-flex items-center gap-1 w-full">
                  <input id="brochureAppDeadline" type="checkbox" x-model="isCustom"/>
                  <label for="brochureAppDeadline" class="m-0 leading-tight">Use Custom Application Deadline</label>
                </div>
                <input type="text" x-show="isCustom" x-model="$store.program.appDeadline" class="rounded-sm p-1 text-primary w-full" placeholder="Custom Application Deadline" x-cloak/>
              </div>
              <div x-data="{ isCustom: false }" x-init="isCustom = $store.program.disableApply === undefined ? false : true" class="flex flex-col justify-center items-start gap-1 w-full">
                <div x-on:change="$store.program.disableApply = isCustom ? 'New applications are currently disabled!' : undefined" class="inline-flex items-center gap-1 w-full">
                  <input id="brochureDisableApply" type="checkbox" x-model="isCustom"/>
                  <label for="brochureDisableApply" class="m-0 leading-tight" title="This disables new applications regardless of application deadline">Disable New Applications</label>
                </div>
              </div>
              <div class="h-px bg-white w-full">&nbsp;</div>
              <div x-data="{ isCustom: false }" x-init="isCustom = $store.program.term === undefined ? false : true" class="flex flex-col justify-center items-start gap-1 w-full">
                <div x-on:change="$store.program.term = isCustom ? $store.program.getTerm() : undefined" class="inline-flex items-center gap-1 w-full">
                  <input id="brochureTerm" type="checkbox" x-model="isCustom"/>
                  <label for="brochureTerm" class="m-0 leading-tight">Use Custom Term</label>
                </div>
                <input type="text" x-show="isCustom" x-model="$store.program.term" class="rounded-sm p-1 text-primary w-full" placeholder="Custom Term" x-cloak/>
              </div>
              <div x-data="{ isCustom: false }" x-init="isCustom = $store.program.schools === undefined ? false : true" class="flex flex-col justify-center items-start gap-1 w-full">
                <div x-on:change="$store.program.schools = isCustom ? $store.program.getSchools() : undefined" class="inline-flex items-center gap-1 w-full">
                  <input id="brochureSchools" type="checkbox" x-model="isCustom"/>
                  <label for="brochureSchools" class="m-0 leading-tight">Use Custom Schools</label>
                </div>
                <input type="text" x-show="isCustom" x-model="$store.program.schools" class="rounded-sm p-1 text-primary w-full" placeholder="Custom Schools" x-cloak/>
              </div>
              <div x-data="{ isCustom: false }" x-init="isCustom = $store.program.departments === undefined ? false : true" class="flex flex-col justify-center items-start gap-1 w-full">
                <div x-on:change="$store.program.departments = isCustom ? $store.program.getDepartments() : undefined" class="inline-flex items-center gap-1 w-full">
                  <input id="brochureDepartments" type="checkbox" x-model="isCustom"/>
                  <label for="brochureDepartments" class="m-0 leading-tight">Use Custom Departments</label>
                </div>
                <input type="text" x-show="isCustom" x-model="$store.program.departments" class="rounded-sm p-1 text-primary w-full" placeholder="Custom Departments" x-cloak/>
              </div>
              <div x-data="{ isCustom: false }" x-init="isCustom = $store.program.countries === undefined ? false : true" class="flex flex-col justify-center items-start gap-1 w-full">
                <div x-on:change="$store.program.countries = isCustom ? $store.program.getCountries() : undefined" class="inline-flex items-center gap-1 w-full">
                  <input id="brochureCountries" type="checkbox" x-model="isCustom"/>
                  <label for="brochureCountries" class="m-0 leading-tight">Use Custom Countries</label>
                </div>
                <input type="text" x-show="isCustom" x-model="$store.program.countries" class="rounded-sm p-1 text-primary w-full" placeholder="Custom Countries" x-cloak/>
              </div>
              <div x-data="{ isCustom: false }" x-init="isCustom = $store.program.cities === undefined ? false : true" class="flex flex-col justify-center items-start gap-1 w-full">
                <div x-on:change="$store.program.cities = isCustom ? $store.program.getCities() : undefined" class="inline-flex items-center gap-1 w-full">
                  <input id="brochureCities" type="checkbox" x-model="isCustom"/>
                  <label for="brochureCities" class="m-0 leading-tight">Use Custom Cities</label>
                </div>
                <input type="text" x-show="isCustom" x-model="$store.program.cities" class="rounded-sm p-1 text-primary w-full" placeholder="Custom Cities" x-cloak/>
              </div>
              <div x-data="{ isCustom: false }" x-init="isCustom = $store.program.courses === undefined ? false : true" class="flex flex-col justify-center items-start gap-1 w-full">
                <div x-on:change="$store.program.courses = isCustom ? $store.program.getCourses() : undefined" class="inline-flex items-center gap-1 w-full">
                  <input id="brochureCourses" type="checkbox" x-model="isCustom"/>
                  <label for="brochureCourses" class="m-0 leading-tight">Use Custom Courses</label>
                </div>
                <input type="text" x-show="isCustom" x-model="$store.program.courses" class="rounded-sm p-1 text-primary w-full" placeholder="Custom Courses" x-cloak/>
              </div>
              <div x-data="{ isCustom: false }" x-init="isCustom = $store.program.cser === undefined ? false : true" class="flex flex-col justify-center items-start gap-1 w-full">
                <div x-on:change="$store.program.cser = isCustom ? $store.program.getCSER() : undefined" class="inline-flex items-center gap-1 w-full">
                  <input id="brochureCSER" type="checkbox" x-model="isCustom"/>
                  <label for="brochureCSER" class="m-0 leading-tight">Use Custom CSER</label>
                </div>
                <input type="text" x-show="isCustom" x-model="$store.program.cser" class="rounded-sm p-1 text-primary w-full" placeholder="Custom CSER" x-cloak/>
              </div>
              <div x-data="{ isCustom: false }" x-init="isCustom = $store.program.academicEnrichment === undefined ? false : true" class="flex flex-col justify-center items-start gap-1 w-full">
                <div x-on:change="$store.program.academicEnrichment = isCustom ? $store.program.getAcademicEnrichment() : undefined" class="inline-flex items-center gap-1 w-full">
                  <input id="brochureAcademicEnrichment" type="checkbox" x-model="isCustom"/>
                  <label for="brochureAcademicEnrichment" class="m-0 leading-tight">Use Custom Academic Enrichment</label>
                </div>
                <input type="text" x-show="isCustom" x-model="$store.program.academicEnrichment" class="rounded-sm p-1 text-primary w-full" placeholder="Custom Academic Enrichment" x-cloak/>
              </div>
            </div>
          </div>
          <button id="importBrochureButton" x-init="clipboard = !programID ? '' : await navigator.clipboard.readText();" x-effect="importBrochure(clipboard)" x-on:click="clipboard = prompt('If it did not import automatically, try pasting your clipboard here. You can also try going back to the brochure and clicking the edit button again.', clipboard)"  x-show="url !== 'liberty-sa.terrradotta.com'" class="flex items-center justify-center flex-1 gap-2 px-4 py-2 rounded-xl bg-accent hover:bg-accent-focus text-accent-content">
            <ion-icon name="clipboard" class="text-2xl text-white">&nbsp;</ion-icon>
            <span>Import Brochure</span>
          </button>
        </div>

        <!--STRIPEND IMPORTEXPORT-->

      {% endif %}
    </div>
  </div>
{% elif content %}
  {{ content | safe }}
{% endif %}
